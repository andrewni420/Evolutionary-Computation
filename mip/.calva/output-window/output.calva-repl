; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "Leiningen"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉mip.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉mip.core꞉> 
nil
clj꞉Evo1꞉> 
nil
clj꞉mip.core꞉> 
#'mip.core/make-fn
clj꞉mip.core꞉> 
#'mip.core/multiplot
clj꞉mip.core꞉> 
#'mip.core/square
clj꞉mip.core꞉> 
#'mip.core/functions
clj꞉mip.core꞉> 
[[#function[mip.core/fn--27098] 2]
 [#function[mip.core/fn--27100] 2]
 [#function[mip.core/fn--27102] 2]
 [#function[mip.core/fn--27104] 2]
 [#function[mip.core/fn--27106] 1]
 [#function[mip.core/fn--27108] 1]
 [#function[mip.core/fn--27110] 4]]
clj꞉mip.core꞉> 
#'mip.core/functions
clj꞉mip.core꞉> 
#'mip.core/functions
clj꞉mip.core꞉> 
#'mip.core/functions
clj꞉mip.core꞉> 
#'mip.core/functions
clj꞉mip.core꞉> 
